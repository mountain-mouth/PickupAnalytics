version: '3.8'

services:
  app:
    build:
      context: ./api
      dockerfile: Dockerfile
    tty: true
    networks:
      local_network:
        ipv4_address: 172.28.1.2
    ports:
      - "8080:8080"
    volumes:
      - ./api:/app
    environment:
      - GO_VERSION=1.18
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=pickup_analytics
    depends_on:
      - db
    command: sh -c 'go mod tidy && air'
  db:
    image: postgres:13
    networks:
      local_network:
        ipv4_address: 172.28.1.3
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: pickup_analytics
    volumes:
      - db_data:/var/lib/postgresql/data
  migrate_app:
    image: migrate/migrate
    networks:
      local_network:
        ipv4_address: 172.28.1.6
    command: [
      "-path=/api/migrations/",
      "-database", "postgres://postgres:postgres@db:5432/pickup_analytics?sslmode=disable",
      "up"
    ]
    volumes:
      - ./api/migrations:/api/migrations
  nginx:
    image: nginx:1.19
    networks:
      local_network:
        ipv4_address: 172.28.1.4
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - app
      - db
  front:
    build:
      context: ./front
      dockerfile: Dockerfile
    networks:
      local_network:
        ipv4_address: 172.28.1.5
    ports:
      - "3000:3000"
    volumes:
      - ./front:/front
volumes:
  db_data:
networks:
  local_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16